// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stackheight.proto

#include "stackheight.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_stackheight_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_stackheight_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Height;
}  // namespace protobuf_stackheight_2eproto
namespace stackheight {
class HeightDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Height>
      _instance;
} _Height_default_instance_;
class StackHeightsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StackHeights>
      _instance;
} _StackHeights_default_instance_;
}  // namespace stackheight
namespace protobuf_stackheight_2eproto {
static void InitDefaultsHeight() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::stackheight::_Height_default_instance_;
    new (ptr) ::stackheight::Height();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::stackheight::Height::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Height =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHeight}, {}};

static void InitDefaultsStackHeights() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::stackheight::_StackHeights_default_instance_;
    new (ptr) ::stackheight::StackHeights();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::stackheight::StackHeights::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StackHeights =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStackHeights}, {
      &protobuf_stackheight_2eproto::scc_info_Height.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Height.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StackHeights.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stackheight::Height, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stackheight::Height, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stackheight::Height, height_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stackheight::StackHeights, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stackheight::StackHeights, heights_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::stackheight::Height)},
  { 7, -1, sizeof(::stackheight::StackHeights)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::stackheight::_Height_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::stackheight::_StackHeights_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "stackheight.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021stackheight.proto\022\013stackheight\")\n\006Heig"
      "ht\022\017\n\007address\030\001 \001(\003\022\016\n\006height\030\002 \001(\003\"4\n\014S"
      "tackHeights\022$\n\007heights\030\001 \003(\0132\023.stackheig"
      "ht.Heightb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 137);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "stackheight.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_stackheight_2eproto
namespace stackheight {

// ===================================================================

void Height::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Height::kAddressFieldNumber;
const int Height::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Height::Height()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_stackheight_2eproto::scc_info_Height.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:stackheight.Height)
}
Height::Height(const Height& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&address_, &from.address_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&address_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:stackheight.Height)
}

void Height::SharedCtor() {
  ::memset(&address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&address_)) + sizeof(height_));
}

Height::~Height() {
  // @@protoc_insertion_point(destructor:stackheight.Height)
  SharedDtor();
}

void Height::SharedDtor() {
}

void Height::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Height::descriptor() {
  ::protobuf_stackheight_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_stackheight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Height& Height::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_stackheight_2eproto::scc_info_Height.base);
  return *internal_default_instance();
}


void Height::Clear() {
// @@protoc_insertion_point(message_clear_start:stackheight.Height)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&address_)) + sizeof(height_));
  _internal_metadata_.Clear();
}

bool Height::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stackheight.Height)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stackheight.Height)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stackheight.Height)
  return false;
#undef DO_
}

void Height::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stackheight.Height)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 address = 1;
  if (this->address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->address(), output);
  }

  // int64 height = 2;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->height(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:stackheight.Height)
}

::google::protobuf::uint8* Height::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:stackheight.Height)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 address = 1;
  if (this->address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->address(), target);
  }

  // int64 height = 2;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->height(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stackheight.Height)
  return target;
}

size_t Height::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stackheight.Height)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 address = 1;
  if (this->address() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->address());
  }

  // int64 height = 2;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Height::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:stackheight.Height)
  GOOGLE_DCHECK_NE(&from, this);
  const Height* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Height>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:stackheight.Height)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:stackheight.Height)
    MergeFrom(*source);
  }
}

void Height::MergeFrom(const Height& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:stackheight.Height)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address() != 0) {
    set_address(from.address());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void Height::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:stackheight.Height)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Height::CopyFrom(const Height& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stackheight.Height)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Height::IsInitialized() const {
  return true;
}

void Height::Swap(Height* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Height::InternalSwap(Height* other) {
  using std::swap;
  swap(address_, other->address_);
  swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Height::GetMetadata() const {
  protobuf_stackheight_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_stackheight_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StackHeights::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StackHeights::kHeightsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StackHeights::StackHeights()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_stackheight_2eproto::scc_info_StackHeights.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:stackheight.StackHeights)
}
StackHeights::StackHeights(const StackHeights& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      heights_(from.heights_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:stackheight.StackHeights)
}

void StackHeights::SharedCtor() {
}

StackHeights::~StackHeights() {
  // @@protoc_insertion_point(destructor:stackheight.StackHeights)
  SharedDtor();
}

void StackHeights::SharedDtor() {
}

void StackHeights::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StackHeights::descriptor() {
  ::protobuf_stackheight_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_stackheight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StackHeights& StackHeights::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_stackheight_2eproto::scc_info_StackHeights.base);
  return *internal_default_instance();
}


void StackHeights::Clear() {
// @@protoc_insertion_point(message_clear_start:stackheight.StackHeights)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  heights_.Clear();
  _internal_metadata_.Clear();
}

bool StackHeights::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stackheight.StackHeights)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .stackheight.Height heights = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_heights()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stackheight.StackHeights)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stackheight.StackHeights)
  return false;
#undef DO_
}

void StackHeights::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stackheight.StackHeights)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .stackheight.Height heights = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->heights_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->heights(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:stackheight.StackHeights)
}

::google::protobuf::uint8* StackHeights::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:stackheight.StackHeights)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .stackheight.Height heights = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->heights_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->heights(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stackheight.StackHeights)
  return target;
}

size_t StackHeights::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stackheight.StackHeights)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .stackheight.Height heights = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->heights_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->heights(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StackHeights::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:stackheight.StackHeights)
  GOOGLE_DCHECK_NE(&from, this);
  const StackHeights* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StackHeights>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:stackheight.StackHeights)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:stackheight.StackHeights)
    MergeFrom(*source);
  }
}

void StackHeights::MergeFrom(const StackHeights& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:stackheight.StackHeights)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  heights_.MergeFrom(from.heights_);
}

void StackHeights::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:stackheight.StackHeights)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StackHeights::CopyFrom(const StackHeights& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stackheight.StackHeights)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StackHeights::IsInitialized() const {
  return true;
}

void StackHeights::Swap(StackHeights* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StackHeights::InternalSwap(StackHeights* other) {
  using std::swap;
  CastToBase(&heights_)->InternalSwap(CastToBase(&other->heights_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StackHeights::GetMetadata() const {
  protobuf_stackheight_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_stackheight_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace stackheight
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::stackheight::Height* Arena::CreateMaybeMessage< ::stackheight::Height >(Arena* arena) {
  return Arena::CreateInternal< ::stackheight::Height >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::stackheight::StackHeights* Arena::CreateMaybeMessage< ::stackheight::StackHeights >(Arena* arena) {
  return Arena::CreateInternal< ::stackheight::StackHeights >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
